{"uuid": "e8a4d43d-05ed-487f-b3b0-913eddc16a98", "children": ["5ceb8c9c-7eed-4bba-b9fa-20a65cd91de8"], "befores": [{"name": "create_obj", "status": "broken", "statusDetails": {"message": "TypeError: Object of type method is not JSON serializable\n", "trace": "  File \"C:\\Kirill_Dechko\\venv\\Lib\\site-packages\\pluggy\\_callers.py\", line 166, in _multicall\n    teardown.throw(outcome._exception)\n  File \"C:\\Kirill_Dechko\\venv\\Lib\\site-packages\\_pytest\\setuponly.py\", line 36, in pytest_fixture_setup\n    return (yield)\n            ^^^^^\n  File \"C:\\Kirill_Dechko\\venv\\Lib\\site-packages\\pluggy\\_callers.py\", line 102, in _multicall\n    res = hook_impl.function(*args)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Kirill_Dechko\\venv\\Lib\\site-packages\\_pytest\\fixtures.py\", line 1132, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Kirill_Dechko\\venv\\Lib\\site-packages\\_pytest\\fixtures.py\", line 913, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n                     ^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Kirill_Dechko\\test_api_dka\\conftest.py\", line 42, in create_obj\n    create_new_obj_endpoint.create_new_obj(body)\n  File \"C:\\Kirill_Dechko\\venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Kirill_Dechko\\test_api_dka\\endpoints\\create_obj.py\", line 13, in create_new_obj\n    self.response = requests.post(  # из self.response можем получить статус-код (прим: <Response [200]>)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Kirill_Dechko\\venv\\Lib\\site-packages\\requests\\api.py\", line 115, in post\n    return request(\"post\", url, data=data, json=json, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Kirill_Dechko\\venv\\Lib\\site-packages\\requests\\api.py\", line 59, in request\n    return session.request(method=method, url=url, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Kirill_Dechko\\venv\\Lib\\site-packages\\requests\\sessions.py\", line 575, in request\n    prep = self.prepare_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Kirill_Dechko\\venv\\Lib\\site-packages\\requests\\sessions.py\", line 486, in prepare_request\n    p.prepare(\n  File \"C:\\Kirill_Dechko\\venv\\Lib\\site-packages\\requests\\models.py\", line 371, in prepare\n    self.prepare_body(data, files, json)\n  File \"C:\\Kirill_Dechko\\venv\\Lib\\site-packages\\requests\\models.py\", line 511, in prepare_body\n    body = complexjson.dumps(json, allow_nan=False)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Python312\\Lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n          ^^^^^^^^^^^\n  File \"C:\\Python312\\Lib\\json\\encoder.py\", line 200, in encode\n    chunks = self.iterencode(o, _one_shot=True)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Python312\\Lib\\json\\encoder.py\", line 258, in iterencode\n    return _iterencode(o, 0)\n           ^^^^^^^^^^^^^^^^^\n  File \"C:\\Python312\\Lib\\json\\encoder.py\", line 180, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\n"}, "steps": [{"name": "Создаем новый объект.", "status": "broken", "statusDetails": {"message": "TypeError: Object of type method is not JSON serializable\n", "trace": "  File \"C:\\Kirill_Dechko\\venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\Kirill_Dechko\\test_api_dka\\endpoints\\create_obj.py\", line 13, in create_new_obj\n    self.response = requests.post(  # из self.response можем получить статус-код (прим: <Response [200]>)\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Kirill_Dechko\\venv\\Lib\\site-packages\\requests\\api.py\", line 115, in post\n    return request(\"post\", url, data=data, json=json, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Kirill_Dechko\\venv\\Lib\\site-packages\\requests\\api.py\", line 59, in request\n    return session.request(method=method, url=url, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Kirill_Dechko\\venv\\Lib\\site-packages\\requests\\sessions.py\", line 575, in request\n    prep = self.prepare_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Kirill_Dechko\\venv\\Lib\\site-packages\\requests\\sessions.py\", line 486, in prepare_request\n    p.prepare(\n  File \"C:\\Kirill_Dechko\\venv\\Lib\\site-packages\\requests\\models.py\", line 371, in prepare\n    self.prepare_body(data, files, json)\n  File \"C:\\Kirill_Dechko\\venv\\Lib\\site-packages\\requests\\models.py\", line 511, in prepare_body\n    body = complexjson.dumps(json, allow_nan=False)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Python312\\Lib\\json\\__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n          ^^^^^^^^^^^\n  File \"C:\\Python312\\Lib\\json\\encoder.py\", line 200, in encode\n    chunks = self.iterencode(o, _one_shot=True)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Python312\\Lib\\json\\encoder.py\", line 258, in iterencode\n    return _iterencode(o, 0)\n           ^^^^^^^^^^^^^^^^^\n  File \"C:\\Python312\\Lib\\json\\encoder.py\", line 180, in default\n    raise TypeError(f'Object of type {o.__class__.__name__} '\n"}, "parameters": [{"name": "body", "value": "{'name': <bound method Provider.name of <faker.providers.person.en_US.Provider object at 0x000002B3A296E930>>, 'data': {'year': 1982, 'price': 2805.99, 'CPU model': 'Intel Core i9DKA', 'Hard disk size': '1 TB DKA'}}"}], "start": 1713417717146, "stop": 1713417717147}], "start": 1713417717146, "stop": 1713417717147}], "start": 1713417717146, "stop": 1713417717188}